#!/bin/bash

prepare_dir () {
  dest=`echo "$2/$1" | sed 's!/\+!/!g' | sed 's!/$!!'`
  if [ ! -d $dest ]; then
    dir_name=`basename $1`
    if [ -n "$VERBOSE" ]; then
        echo "Entering $dest" 1>&2
    fi
    mkdir -p $dest

    # generate section list
    echo -e "---\ntitle: $dir_name\n---" > $dest/_index.md
  fi
}

code2md () {
  file_list=`cd $1; git ls-files | $EXCLUDE_CMD`
  for f in $file_list; do
    prepare_dir `dirname $f` $2
    dest_file=`echo "$2/$f" | sed 's!/\+!/!g'`
    file_name=`basename $f`
    if [ -n "$VERBOSE" ]; then
        echo "Generating $dest_file.md" 1>&2
    fi
    if [ ${file_name##*.} = 'md' ]; then
      echo '' > $dest_file
      head -1 $1/$f | grep '\-\-\-' > /dev/null
      if [ $? -eq 1 ]; then
          # add front matter
          echo -e "---\ntitle: $file_name\n---" > $dest_file
      fi
      cat $1/$f >> $dest_file
    else
      echo -e "---\ntitle: $file_name\n---" > $dest_file.md
      echo '```'"${file_name##*.}" >> $dest_file.md
      cat $1/$f >> $dest_file.md
      echo -e '\n```' >> $dest_file.md
    fi
  done

  # override top page
  project=`basename $(git remote -v | head -1 | awk '{print $2}' | sed 's/^.*://')`
  echo -e "---\ntitle: ${project%.git}\n---" > $2/_index.md
}

usage () {
  cat <<- 'EOS' 1>&2
	usage: code2md [<options>] <outpur_dir>

	       -d <sub_dir>   root directory under git repository
	       -v             verbose
	       -x <suffix>    exclude files with backward match.
	EOS
  exit 1
}

EXCLUDE_CMD=cat
while getopts "vd:x:h" OPT
do
    case $OPT in
      v) VERBOSE=1
         ;;
      d) SUB_DIR=$OPTARG
         ;;
      x) EXCLUDE_CMD=" grep -v $OPTARG$"
         ;;
      h) usage
         ;;
    esac
done
shift $((OPTIND - 1))

ORIGIN=$(git rev-parse --show-cdup)
if [ $? -ne 0 ]; then
    echo "Not a git repository. Exit"
    exit 1
fi
ORIGIN=./$ORIGIN$SUB_DIR

# requires orign & dest dir
if [ $# -lt 1 ]; then
    usage
fi

code2md $ORIGIN $1
